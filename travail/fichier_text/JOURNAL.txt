
======================================================================
# SUIVI


## Semaine 2 :

Implémentation de la classe Vecteur:

- implémentation de toutes méthodes et utilisation de la surcharge d'opérateurs.

- implémentation d'un fichier testVecteur.cc

- pas de problème particulier pour la classe Vecteur et le fichier test de celle-ci.

- reflexion sur la gestion des erreurs et revision des bases de ces gestions pour permettre de les implémenter plus tard dans le(s) fichiers main(s).

- Création d'une DropBox dédiée au projet.

--------------------------------------------------
## Semaine 3 :

	- Nous avons dans un premier lieu essayé de créer l'objet matrice comme étant un tableau de trois Vecteurs mais cela n'était conceptuellement pas totalement correct et 	  compliquait le code, nous avons donc modélisé une matrice comme étant un vector de vector de double.

	- implémentation totale de la classe Matrice:    * implémentation de toutes les méthodes et surchargent d'opérateurs

	 						 * fichier testMatrice.cc

							 * gestion d'erreurs

	- renseignements sur le logiciel Qt et openGl et tests sur les exercices mit à la disposition dans le cours pour essayer de comprendre comment créer des formes, leur 		  attribuer des couleurs et les faire bouger.


--------------------------------------------------
## Semaine 4 :

	- Réflexion et début d'implémentation de la classe Toupie
	
	- notre classe Toupie prends pour l'instant une masse, un Vecteur de paramètre, un Vecteur de dérivées, des moments d'inerties (I1,I3)

	- quelques problèmes conceptuels: * sur quelles méthodes était virtuelles purs ou non

					  * ce que signifiait d'avoir une classe Toupie abstraite  



	Une fois l'implémentation de la sous Classe ConeSimple fait, nous avons décidé dans un premier temps que la classe Toupie serait abstraite. Nous ne considérons pas de Toupie 	dite général pour l'instant car nous ne savons pas comment la faire évoluer.

	- implémentation de la sous-classe ConeSimple avec des équations de mouvement données dans le complément mathématique.

	


--------------------------------------------------
## Semaine 5 :

	- séparation de notre binôme l'un restant en Suisse l'autre repartant en France à cause du confinement ce qui rends l'avancement plus compliqué même si il était de 		  communiquer via Zoom.

	- Continuation de l'implémentation de la classe Toupie avec en parallèle le début de la création de la classe Integrateur. Cela nous a permis de mieux comprendre le 		  fonctionnement de la Classe Toupie. 

	- On comprends mieux comment la créer une classe Toupie et comment la toupie allait évoluer dans un référentiel.

	- Création fichier test pour la classe Toupie.

	- Implémentation de l'intégrateur Euler-Cromer à partir des équations données dans le complément mathématique.

--------------------------------------------------
## Semaine 6 :

	- Implémentation d'un Pendule et d'une Masse qui tombe étant deux sous-classes de Toupie.

	- Utilisation du logiciel Gnuplot pour vérifier les équations de mouvements de nos Toupie

	- Problème affichage Gnuplot pour le Pendule, la courbe n'est pas sinusoïdale

	- Problème résolue, il fallait donner une troisième coordonnée à Gnuplot (le temps) pour tracer correctement toutes les courbes.

--------------------------------------------------
## Semaine 7 :

	- Réflexion sur les classes Dessinables, SupportADessin et Systeme et ce qu'elles représentent.

	- Implementation de la classe Dessinable: représentant tout objets physique pouvant être représenté graphiquement ou textuellement.

	- Implémentation de la classe SupportADessin: étant la façon dont l'objet va être représenté

	- Implémentation de la classe Systeme: le système physique qui contient nos toupies.

	- Problème de dépendance cyclique entre Toupie et Dessinable 
	
	- Problème résolue en prototypant les toupies dans le fichier Dessinable.h et en utilisant #ifndef et #define permettant de bloquer toutes redefinition de toupies 		  (ou de dessinable) dans un autre fichier que celui désiré. Solution trouvé en regardant le tutoriel de Qt.

	- On remarque en testant notre classe Dessinable que l'intégrateur d'Euler-Cromer diverge très rapidement

	- Fusion du fichier test de Toupie et du fichier test de Systeme car le premier peut s'effectuer dans le deuxième.

	- Passage de Geany au logiciel Qt. Il nous est compliqué de comprendre l'intérêt et la construction des fichiers .pro

	- Révision du tutoriel Qt sur le Graphisme

--------------------------------------------------
## Semaine 8 :

	- Implémentation de Toupies comme attribut du GlWidget (nous pensons mettre un système à la place plus tard)

	- Implémentation de l'affichage graphique d'un pendule par une sphère au bout d'un fil suspendu à l'origine.

	- Implémentation de l'affichage graphique d'une Masse qui tombe en réutilisant la sphère prise dans le tutoriel de Qt.
	
	- Création d'un cone à partir de modifications de la classe GLSphere, mais cela ne nous permettait pas de modifiée la hauteur du cône indépendant du rayon

	- Problèmes Mac: l'un de nous deux étant sur mac à rencontré deux problèmes importants du à la nouvelle mise à jour du MacOS: 

		* Qt ne reconnaît plus la version de MacOs, pour cela il fallait rentré dans les fichiers sources de Qt et modifié des lignes par rapport à cela.
		
		* Qt sort de nouvelles extension de fichiers à cause de la nouvelle version MacOs. En effet, maintenant les fichiers librairies (créé par notre sous projet général 		  comportant touts nos programme et utilisé par QtGL) sont en .dylib et non .a . Nous avons dans un premier temps modifié les fichiers Makefile provenant des builds 		  que sortait Qt mais cela était très bancale. Nous avons par la suite modifié l'extension dans le .pro de Qt_Gl passant de [...]libgeneral.a à [...]libgeneral.a
		  ce qui à marché contrairement à nos attente car l'un de nous étant sur Windows il nécessitait donc des fichiers en extension .a .Cependant cette transition ne nous 		  a pas impacté.

--------------------------------------------------
## Semaine 9 :

	- Implémentation des invariants du mouvement d'une Toupie ce qui requièrent de nombreuses méthodes auxiliaires (implémentées dans la classe Toupie).

	- Recherche d'une solution pour remplace gnuplot : QCustomPlot semble être un candidat idéal.

	- Recherche sur le fonctionnement de QCustomPlot.

	- Problème sur le fait que nos invariants du mouvement variait.


--------------------------------------------------
## Semaine 10 :

	- Les invariants sont désormais invariants grâce à des vérifications avec les données sur Progmaph

	- Pause sur la partie QCustomPlot demandant trop de temps et ayant trop d'erreurs ( erreurs d'architectures très présentent)
	
	- Implémentation d'une multitude de grandeurs physique en prévision de la toupie générale.

	- Implémentation d'un classe Mémoire (attribut de VueOpenGL) ce qui nous permet de dessiner la trace du point de centre de masse d'un cône.


--------------------------------------------------
## Semaine 11 :

	- Passage d'une classe Toupie abstraite à une classe non abstraite concrétisé par la description d'une toupie générale.

	- Implémentation d'une sous classe Toupie chinoise.

	- Vérification des valeurs obtenus en analysant un ConeSimple et une toupie général (Toupie), en obtient une égalité entre les simulations.


--------------------------------------------------
## Semaine 12 :

	-Implémentation d'un système comme attribut du Widget et non plus des Toupies.

	-Implémentation d'une couleur pour le Background de l'affichage graphique.

	- Recherche et tests sur les shaders pour l'affichage graphique.

	-Problème de redimensionnement des shaders pour afficher ceux-ci sur un cône.

--------------------------------------------------
## Semaine 13 :

	- Fin du confinement en France ce qui nous à permis de nous retrouver pour travailler à deux et donc avancer beaucoup plus vite.

	- passage de la DropBox à GitHub plus optimisé pour le code et nous permet de travailler sur des branches différentes simultanément et de facilement transmettre nos 		  modifications. 

	- mise en place d'une texture pour un parquet pour l'affichage graphique.

	- Implémentation de la trace du point G pour toutes les toupies.

	- La classe Mémoire est désormais seulement un attribut d'une Toupie car ceci nous permet de tracer le déplacement du point G de plusieurs toupies simultanément.

	- Implémentation affichage Graphique d'une toupie Chinoise à partir d'une Sphère. Cependant le dessin d'une toupie chinoise ne corresponds pas au rayon de la toupie 		  chinoise.
	
	- Déplacement du point de contact pour la toupie chinoise fini.

	- Il est maintenant possible de déclarer des Toupies avec des points de contacts différents de l'origine

	- Implémentation d'une variation de couleur des ConeSimple en dépendance de certaines Grandeurs Physique (phi_point,psi_point,theta_point).

	- Mise en place du déplacement dans la Widget à l'aide de la souris.

	- Reprise de QCustomPlot pour afficher les courbes des invariants du mouvement d'une toupie.
	
	- création d'un Widget Pour QCustomPlot avec des boutons pour pouvoir choisir nos invariants du mouvements.

	-Implémentation d'une vue tangentielle à la toupie activante à partir de la touche V sur le clavier.

	- recréation d'un makefile pour l'exercice P9 (comme demandé)

--------------------------------------------------
## Semaine 14 :




!!!! SI ON MODIFIE TESTSYSTEME NE PAS OUBLIER DE LE CHANGER DANS P9 AUSSI !!!!
